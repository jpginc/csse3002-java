package crinkle;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPanel;

import data.MovementData;
import visualiser.Visualiser;

/**
 *
 * @author ToanHo
 */
public class RealTimeMode extends VisualizingFrame {

	private JButton btnReceive;
	private JButton btnStop;
	private JPanel pnlRealTime;

	/**
	 * Creates new form PlaybackMode
	 */
	public RealTimeMode() {
		initComponents();
		setVisualiser(new Visualiser());
	}

	
	/**
	 * This constructor creates a player that displays the data in real time
	 * @param launchMode
	 * @param m
	 */
	public RealTimeMode(LaunchMode launchMode, MovementData m) {
		super(launchMode);
		initComponents();
		setVisualiser(new Visualiser(m, this, 0));
		this.addComponentToPnlViewer(visualiser.getViewerComponent());
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnlRealTime = new javax.swing.JPanel();
		btnReceive = new javax.swing.JButton();
		btnStop = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setMinimumSize(new Dimension(960, 720));

		pnlRealTime.setBorder(BorderFactory.createTitledBorder("RealTime"));
		pnlRealTime.setPreferredSize(new java.awt.Dimension(210, 85));

		btnReceive.setText("Receive");
		btnReceive.setPreferredSize(new java.awt.Dimension(80, 40));
		btnReceive.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnReceiveActionPerformed(evt);
			}
		});
		
		btnStop.setText("Stop");
		btnStop.setPreferredSize(new java.awt.Dimension(80, 40));
		btnStop.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnStopActionPerformed(evt);
			}
		});

		pnlRealTime.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 5));
		pnlRealTime.add(btnReceive);
		pnlRealTime.add(btnStop);
		addComponentToPnlLeft(pnlRealTime);
	}


	
	private void btnStopActionPerformed(ActionEvent evt) {
		// TODO
	}

	private void btnReceiveActionPerformed(ActionEvent evt) {
		// TODO
	}
}
