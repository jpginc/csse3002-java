package crinkle;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;

/**
 *
 * @author ToanHo
 */
public class LaunchMode extends javax.swing.JFrame {

    private javax.swing.JButton btnSync;
    private javax.swing.JButton btnOpen;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblFileName;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txfFileName;
    private javax.swing.JLabel pnlTop; // contain btnConnect
    private javax.swing.JLabel pnlBottom; // contain lblFileName, txfFileName, btnOpen

    /**
     * Creates new form LaunchMode
     */
    public LaunchMode() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

    	try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            ex.printStackTrace();;
        }
    	
        btnSync = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txfFileName = new javax.swing.JTextField();
        btnOpen = new javax.swing.JButton();
        lblFileName = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        pnlTop = new JLabel();
        pnlBottom = new JLabel();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Crinkle Viewer");
        setResizable(false);

        btnSync.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnSync.setText("Sync");
        btnSync.setPreferredSize(new java.awt.Dimension(140, 40));
        btnSync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSyncActionPerformed(evt);
            }
        });

        txfFileName.setEnabled(false);
        txfFileName.setPreferredSize(new java.awt.Dimension(300, 20));

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        lblFileName.setText("File Name");

        lblStatus.setHorizontalAlignment(SwingConstants.CENTER);
        lblStatus.setText("Status");
        lblStatus.setPreferredSize(new Dimension(440, 15));
        
        jSeparator1.setPreferredSize(new Dimension(430, 10));
        
        pnlTop.setPreferredSize(new Dimension(500, 100));
        pnlBottom.setPreferredSize(new Dimension(500, 30));
        
        getContentPane().setLayout(new FlowLayout(FlowLayout.CENTER, 0, 5));
        getContentPane().add(pnlTop);
        pnlTop.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 15));
        pnlTop.add(btnSync);
        pnlTop.add(lblStatus);
        getContentPane().add(jSeparator1);
        getContentPane().add(pnlBottom);
        pnlBottom.setLayout(new FlowLayout(FlowLayout.CENTER, 15, 5));
        pnlBottom.add(lblFileName);
        pnlBottom.add(txfFileName);
        pnlBottom.add(btnOpen);
        
        setSize(510, 200);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        
        validate();
    }
    
    private void btnSyncActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    	lblStatus.setText("Not implement yet");
    }

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        //JFileChooser fc = new JFileChooser();
        //fc.showOpenDialog(this);
        PlaybackMode playbackMode = new PlaybackMode(this);
        this.setVisible(false);
        playbackMode.setVisible(true);        
    }
    
	public static boolean isNumeric(String str)  
	{  
	  try  
	  {  
	    double d = Double.parseDouble(str);  
	  }  
	  catch(NumberFormatException nfe)  
	  {  
	    return false;  
	  }  
	  return true;  
	}
	
	public static List<List<Integer>> readFile(String filename) {
		List<List<Integer>> store = new ArrayList<List<Integer>>();		
		
		// read a file
		try (BufferedReader br = new BufferedReader(new FileReader(filename)))
		{ 
			String sCurrentLine;
 
			while ((sCurrentLine = br.readLine()) != null) {
				List<Integer> tempArray = new ArrayList<Integer>();
				String[] sr = sCurrentLine.split(",");
				for(int i=0; i<sr.length; i++) {
					if(isNumeric(sr[i])) {
						int num = Integer.parseInt(sr[i]);
						tempArray.add(num);
						//System.out.println(num);
					}
				}
				store.add(tempArray);
			}
 
		} catch (IOException e) {
			e.printStackTrace();
		}
		return store;
	}

}
